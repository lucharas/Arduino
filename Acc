#include <Wire.h>

long accelX, accelY, accelZ;
float gForceX, gForceY, gForceZ;
long heat;
float temp;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  setupMPU();
}

void loop() {
    recordAccelRegisters();
    recordTempRegisters();

    float alfa = atan2(gForceX, gForceZ)*57.2956;
    float beta = atan2(gForceY, gForceZ)*57.2956;

    Serial.print(alfa,0);
    Serial.print("\t");
    Serial.print(beta,0);
    Serial.print("\t");
    Serial.print(temp-4.0,1);
    Serial.println();
    delay(50);

}

void setupMPU(){
  Wire.beginTransmission(0b1101000);  //This is the I2C address of the MPU (b1101000/b1101001 for AC0 low/high datasheet sec. 9.2)
  Wire.write(0x6B);                   //Accessing the register 6B - Power Management (Sec. 4.28)
  Wire.write(0b00000000);             //Setting SLEEP register to 0. (Required; see Note on p. 9)
  Wire.endTransmission();  
  Wire.beginTransmission(0b1101000);  //I2C address of the MPU
  Wire.write(0x1B);                   //Accessing the register 1B - Gyroscope Configuration (Sec. 4.4) 
  Wire.write(0x00000000);             //Setting the gyro to full scale +/- 250deg./s 
  Wire.endTransmission(); 
  Wire.beginTransmission(0b1101000);  //I2C address of the MPU
  Wire.write(0x1C);                   //Accessing the register 1C - Acccelerometer Configuration (Sec. 4.5) 
  Wire.write(0b00000000);             //Setting the accel to +/- 2g
  Wire.endTransmission(); 
}

void recordAccelRegisters() {
  Wire.beginTransmission(0b1101000);  //I2C address of the MPU
  Wire.write(0x3B);                   //Starting register for Accel Readings
  Wire.endTransmission();
  Wire.requestFrom(0b1101000,6);      //Request Accel Registers (3B - 40)
  while(Wire.available() < 6);
  accelX = Wire.read()<<8|Wire.read(); //Store first two bytes into accelX
  accelY = Wire.read()<<8|Wire.read(); //Store middle two bytes into accelY
  accelZ = Wire.read()<<8|Wire.read(); //Store last two bytes into accelZ
  processAccelData();
}

void processAccelData(){
  gForceX = accelX / 16384.0;
  gForceY = accelY / 16384.0; 
  gForceZ = accelZ / 16384.0;
}

void recordTempRegisters() {
  Wire.beginTransmission(0b1101000);  //I2C address of the MPU
  Wire.write(0x41);                   //Starting register for Temp Readings
  Wire.endTransmission();
  Wire.requestFrom(0b1101000,2);      //Request Accel Registers (41 - 42)
  while(Wire.available() < 2);
  heat = Wire.read()<<8|Wire.read();  //Store first two bytes into temp
  processTempData();
}

void processTempData(){
  temp = heat/340.0 + 36.53;
}
